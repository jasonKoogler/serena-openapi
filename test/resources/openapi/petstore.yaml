openapi: 3.0.3
info:
  title: Pet Store API
  description: A simple API for managing pets in a pet store
  version: 1.0.0
  contact:
    name: Pet Store Support
    email: support@petstore.com
servers:
  - url: https://api.petstore.com/v1
    description: Production server
  - url: https://staging-api.petstore.com/v1
    description: Staging server

paths:
  /pets:
    get:
      operationId: listPets
      summary: List all pets
      description: Retrieve a list of all pets in the store with optional filtering
      tags:
        - pets
        - inventory
      parameters:
        - name: limit
          in: query
          description: Maximum number of pets to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: species
          in: query
          description: Filter pets by species
          required: false
          schema:
            type: string
            enum: [dog, cat, bird, fish, reptile]
        - name: status
          in: query
          description: Filter pets by availability status
          required: false
          schema:
            type: string
            enum: [available, pending, sold]
      responses:
        '200':
          description: A list of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid request parameters
        '500':
          description: Internal server error

    post:
      operationId: createPet
      summary: Add a new pet
      description: Create a new pet record in the store
      tags:
        - pets
        - management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '201':
          description: Pet created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid pet data
        '409':
          description: Pet with this name already exists

  /pets/{petId}:
    get:
      operationId: getPetById
      summary: Get pet by ID
      description: Retrieve detailed information about a specific pet
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The ID of the pet to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Pet details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found

    put:
      operationId: updatePet
      summary: Update pet information
      description: Update an existing pet's information
      tags:
        - pets
        - management
      parameters:
        - name: petId
          in: path
          required: true
          description: The ID of the pet to update
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPet'
      responses:
        '200':
          description: Pet updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
        '400':
          description: Invalid pet data

    delete:
      operationId: deletePet
      summary: Delete a pet
      description: Remove a pet from the store
      tags:
        - pets
        - management
      parameters:
        - name: petId
          in: path
          required: true
          description: The ID of the pet to delete
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Pet deleted successfully
        '404':
          description: Pet not found

  /owners:
    get:
      operationId: listOwners
      summary: List pet owners
      description: Retrieve a list of all pet owners
      tags:
        - owners
      parameters:
        - name: city
          in: query
          description: Filter owners by city
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of owners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Owner'

    post:
      operationId: createOwner
      summary: Register new owner
      description: Register a new pet owner in the system
      tags:
        - owners
        - registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOwner'
      responses:
        '201':
          description: Owner registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'

  /owners/{ownerId}/pets:
    get:
      operationId: getOwnerPets
      summary: Get pets by owner
      description: Retrieve all pets belonging to a specific owner
      tags:
        - owners
        - pets
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owner
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Owner's pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'

  /adoption:
    post:
      operationId: adoptPet
      summary: Process pet adoption
      description: Process the adoption of a pet by an owner
      tags:
        - adoption
        - pets
        - owners
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdoptionRequest'
      responses:
        '200':
          description: Adoption processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdoptionResult'

components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
        - species
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the pet
        name:
          type: string
          description: Pet's name
          example: "Fluffy"
        species:
          type: string
          enum: [dog, cat, bird, fish, reptile]
          description: Type of animal
        breed:
          type: string
          description: Pet's breed
          example: "Golden Retriever"
        age:
          type: integer
          minimum: 0
          description: Age in years
        status:
          type: string
          enum: [available, pending, sold]
          description: Availability status
        ownerId:
          type: integer
          format: int64
          description: ID of the pet's owner (if adopted)
        vaccinated:
          type: boolean
          description: Whether the pet is vaccinated
        description:
          type: string
          description: Additional information about the pet

    NewPet:
      type: object
      required:
        - name
        - species
      properties:
        name:
          type: string
          description: Pet's name
        species:
          type: string
          enum: [dog, cat, bird, fish, reptile]
          description: Type of animal
        breed:
          type: string
          description: Pet's breed
        age:
          type: integer
          minimum: 0
          description: Age in years
        vaccinated:
          type: boolean
          description: Whether the pet is vaccinated
        description:
          type: string
          description: Additional information about the pet

    Owner:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for the owner
        name:
          type: string
          description: Owner's full name
        email:
          type: string
          format: email
          description: Owner's email address
        phone:
          type: string
          description: Owner's phone number
        address:
          $ref: '#/components/schemas/Address'

    NewOwner:
      type: object
      required:
        - name
        - email
      properties:
        name:
          type: string
          description: Owner's full name
        email:
          type: string
          format: email
          description: Owner's email address
        phone:
          type: string
          description: Owner's phone number
        address:
          $ref: '#/components/schemas/Address'

    Address:
      type: object
      properties:
        street:
          type: string
          description: Street address
        city:
          type: string
          description: City name
        state:
          type: string
          description: State or province
        zipCode:
          type: string
          description: ZIP or postal code
        country:
          type: string
          description: Country name

    AdoptionRequest:
      type: object
      required:
        - petId
        - ownerId
      properties:
        petId:
          type: integer
          format: int64
          description: ID of the pet to adopt
        ownerId:
          type: integer
          format: int64
          description: ID of the adopting owner
        notes:
          type: string
          description: Additional notes about the adoption

    AdoptionResult:
      type: object
      properties:
        adoptionId:
          type: integer
          format: int64
          description: Unique adoption record ID
        pet:
          $ref: '#/components/schemas/Pet'
        owner:
          $ref: '#/components/schemas/Owner'
        adoptionDate:
          type: string
          format: date-time
          description: Date and time of adoption
        status:
          type: string
          enum: [completed, pending, cancelled]
          description: Status of the adoption process